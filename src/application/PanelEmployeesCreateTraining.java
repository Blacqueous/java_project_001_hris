/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application;

import classes.ClassComplexCellrenderer;
import classes.ClassConstantsCustom;
import classes.ClassDateFormatValue;
import classes.ClassMyDBConnectionEmbeddedDerby;
import classes.ClassTableButtonEditor;
import classes.ClassTableButtonRenderer;
import classes.ClassTextfieldPrompt;
import classes.ClassTextfieldRequired;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author egrubellano
 */
public class PanelEmployeesCreateTraining extends javax.swing.JPanel {

    protected ArrayList<Component> reqList = new ArrayList<>();
    protected ArrayList<Integer> cmbboxId = new ArrayList<>();
    protected Calendar currentDate = Calendar.getInstance();
    protected ClassConstantsCustom constant = new ClassConstantsCustom();
    protected ClassDateFormatValue fmtDateVal = new ClassDateFormatValue();
    protected ClassTextfieldRequired reqField = new ClassTextfieldRequired();
    protected DefaultTableModel dtm;
    protected FramePrime panel_ancestor;
    protected PanelEmployees panel_parent;
    protected PanelEmployeesCreate panel_child;
    protected TableRowSorter<TableModel> sorter;

    /**
     * Creates new form PanelEmployeesCreates
     */
    public PanelEmployeesCreateTraining() {
        initComponents();
        initAdditionalComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitle = new javax.swing.JPanel();
        panelFormListTitle_001_caption = new javax.swing.JPanel();
        labelFormListTitle_001_icon = new javax.swing.JLabel();
        labelFormListTitle_001_name = new javax.swing.JLabel();
        panelFormListTitle_001_hr = new javax.swing.JPanel();
        panelFormListTitle_001_breakline = new javax.swing.JSeparator();
        panelMain = new javax.swing.JPanel();
        panelMainCenterForm = new javax.swing.JPanel();
        panelMainCenterFormFields = new javax.swing.JPanel();
        cmbboxName = new santhosh.WideComboBox();
        dateSelected = new com.toedter.calendar.JDateChooser();
        btnAdd = new javax.swing.JButton();
        labelFormListField_001_head = new javax.swing.JLabel();
        panelMainCenterView = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        table_view = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        panelTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 5, 0));
        panelTitle.setOpaque(false);
        panelTitle.setPreferredSize(new java.awt.Dimension(10, 40));
        panelTitle.setLayout(new java.awt.BorderLayout());

        panelFormListTitle_001_caption.setMinimumSize(new java.awt.Dimension(147, 100));
        panelFormListTitle_001_caption.setOpaque(false);
        panelFormListTitle_001_caption.setPreferredSize(new java.awt.Dimension(180, 100));
        panelFormListTitle_001_caption.setLayout(new java.awt.BorderLayout());

        labelFormListTitle_001_icon.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        labelFormListTitle_001_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFormListTitle_001_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_hand_property.png"))); // NOI18N
        labelFormListTitle_001_icon.setPreferredSize(new java.awt.Dimension(25, 25));
        panelFormListTitle_001_caption.add(labelFormListTitle_001_icon, java.awt.BorderLayout.LINE_START);

        labelFormListTitle_001_name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelFormListTitle_001_name.setForeground(new java.awt.Color(25, 25, 25));
        labelFormListTitle_001_name.setText(" Training(s) information");
        labelFormListTitle_001_name.setRequestFocusEnabled(false);
        panelFormListTitle_001_caption.add(labelFormListTitle_001_name, java.awt.BorderLayout.CENTER);

        panelTitle.add(panelFormListTitle_001_caption, java.awt.BorderLayout.LINE_START);

        panelFormListTitle_001_hr.setBorder(javax.swing.BorderFactory.createEmptyBorder(18, 0, 0, 8));
        panelFormListTitle_001_hr.setOpaque(false);
        panelFormListTitle_001_hr.setLayout(new java.awt.GridLayout(0, 1));
        panelFormListTitle_001_hr.add(panelFormListTitle_001_breakline);

        panelTitle.add(panelFormListTitle_001_hr, java.awt.BorderLayout.CENTER);

        add(panelTitle, java.awt.BorderLayout.PAGE_START);

        panelMain.setLayout(new java.awt.BorderLayout());

        panelMainCenterForm.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 5, 5));
        panelMainCenterForm.setPreferredSize(new java.awt.Dimension(276, 40));
        panelMainCenterForm.setLayout(new java.awt.BorderLayout());

        panelMainCenterFormFields.setBackground(new java.awt.Color(225, 225, 225));
        panelMainCenterFormFields.setLayout(new java.awt.GridLayout(1, 1));

        cmbboxName.setForeground(new java.awt.Color(51, 51, 51));
        cmbboxName.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbboxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxNameActionPerformed(evt);
            }
        });
        panelMainCenterFormFields.add(cmbboxName);
        reqList.add(0, cmbboxName);

        dateSelected.setForeground(new java.awt.Color(51, 51, 51));
        dateSelected.setDateFormatString("MMMM dd, yyyy");
        dateSelected.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        dateSelected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_calendar_red.png")));
        dateSelected.setMaxSelectableDate(currentDate.getTime());
        dateSelected.setOpaque(false);
        dateSelected.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateSelectedPropertyChange(evt);
            }
        });
        panelMainCenterFormFields.add(dateSelected);
        reqList.add(1, dateSelected);

        panelMainCenterForm.add(panelMainCenterFormFields, java.awt.BorderLayout.CENTER);

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(25, 25, 25));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_plus_button.png"))); // NOI18N
        btnAdd.setToolTipText("");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnAdd.setIconTextGap(3);
        btnAdd.setPreferredSize(new java.awt.Dimension(35, 35));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        panelMainCenterForm.add(btnAdd, java.awt.BorderLayout.LINE_END);

        labelFormListField_001_head.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_bullet_arrow_right.png"))); // NOI18N
        labelFormListField_001_head.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 0));
        labelFormListField_001_head.setMaximumSize(new java.awt.Dimension(125, 0));
        labelFormListField_001_head.setMinimumSize(new java.awt.Dimension(125, 0));
        labelFormListField_001_head.setPreferredSize(new java.awt.Dimension(20, 0));
        panelMainCenterForm.add(labelFormListField_001_head, java.awt.BorderLayout.LINE_START);

        panelMain.add(panelMainCenterForm, java.awt.BorderLayout.PAGE_START);

        panelMainCenterView.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 15, 5));
        panelMainCenterView.setLayout(new java.awt.CardLayout());

        scrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        table_view.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        table_view.setForeground(new java.awt.Color(51, 51, 51));
        table_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_view.setFillsViewportHeight(true);
        table_view.setGridColor(new java.awt.Color(230, 230, 230));
        table_view.setRowHeight(30);
        table_view.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table_view.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                table_viewMouseReleased(evt);
            }
        });
        scrollPane.setViewportView(table_view);

        panelMainCenterView.add(scrollPane, "card2");

        panelMain.add(panelMainCenterView, java.awt.BorderLayout.CENTER);

        add(panelMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initAdditionalComponents() {
        
        comboBoxLoad();
        
        setPlaceHolder();
        
        dateSelected.getComponent(0).setBackground(new Color(180, 180, 180));
        cmbboxName.setBackground(new Color(150, 150, 150));
        
        JTextFieldDateEditor dateTextEditor = (JTextFieldDateEditor) dateSelected.getDateEditor();
        dateTextEditor.setEditable(false);
        dateTextEditor.setHorizontalAlignment(JTextField.CENTER);
        
        initTable();
        
    }

    private void cmbboxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxNameActionPerformed

        cmbboxName.setBackground(new Color(150, 150, 150));

    }//GEN-LAST:event_cmbboxNameActionPerformed

    private void dateSelectedPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateSelectedPropertyChange

        dateSelected.getComponent(0).setBackground(new Color(180, 180, 180));
        dateSelected.getComponent(1).setBackground(Color.WHITE);

    }//GEN-LAST:event_dateSelectedPropertyChange

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (reqField.requiredFieldsValidate(reqList)) {
            ArrayList<Object> addNewRow = new ArrayList<>();
            addNewRow.add(cmbboxId.get(cmbboxName.getSelectedIndex()-1));
            addNewRow.add(cmbboxName.getSelectedItem().toString().trim());
            addNewRow.add(fmtDateVal.formatDateToString(dateSelected).trim());
            addNewRow.add("");

            dtm.addRow(addNewRow.toArray());
            table_view.setModel(dtm);
            sorter = new TableRowSorter<TableModel>(dtm);
            table_view.setRowSorter(sorter);

            dateSelected.setDate(null);
            cmbboxName.setSelectedIndex(0);
            cmbboxName.requestFocus();
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void table_viewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_viewMouseReleased

        //        if (evt.getButton() == 3 && table_view.getSelectedRow() >= 0) {
            //            popupMenu.show(table_view, (int)evt.getX(), (int)evt.getY());
            //        }
    }//GEN-LAST:event_table_viewMouseReleased

    /**
     * Get table model.
     * @return table_view
     */
    public JTable getTableModel() {
        
        return table_view;
        
    }

    /**
     * Set table model.
     * @param tbl
     */
    public void setTableModel(JTable tbl) {
        
        clearDialog();
        sorter = new TableRowSorter<TableModel>(dtm);
        table_view.setRowSorter(sorter);
        
        for (int i = 0; i < tbl.getRowCount(); i++) {
            ArrayList<Object> addNewRow = new ArrayList<>();
//            for (int j = 0; j < tbl.getColumnCount(); j++) {
            addNewRow.add(tbl.getValueAt(i, 0));
            addNewRow.add(tbl.getValueAt(i, 1));
            addNewRow.add(tbl.getValueAt(i, 2));
            addNewRow.add(tbl.getValueAt(i, 3));
//            }
            dtm.addRow(addNewRow.toArray());
        }
        
        table_view.setModel(dtm);
        
    }

    /**
     * Clear all dialog fields.
     */
    public void clearDialog() {
        
        DefaultTableModel tm = (DefaultTableModel)table_view.getModel();
        tm.getDataVector().removeAllElements();
        table_view.setModel(tm);
        table_view.repaint();
        cmbboxName.setSelectedIndex(0);
        cmbboxName.requestFocus();
        dateSelected.setDate(null);
        
    }

    /**
     * Refresh all dialog fields.
     */
    public void refreshDialog() {
        
        table_view.repaint();
        cmbboxName.setSelectedIndex(0);
        cmbboxName.requestFocus();
        dateSelected.setDate(null);
        
    }

    public void setPlaceHolder() {
        
        JTextFieldDateEditor dateTextEditor = (JTextFieldDateEditor) dateSelected.getDateEditor();
        ClassTextfieldPrompt tpTxtfldDate = new ClassTextfieldPrompt("Select a Date", dateTextEditor);
        
        ClassTextfieldPrompt[] placeholder = {
            tpTxtfldDate
        };
        
        // adjust display
        for (ClassTextfieldPrompt placeholder1 : placeholder) {
            placeholder1.changeAlpha(0.3f);
            placeholder1.changeStyle(Font.ITALIC);
            placeholder1.setHorizontalAlignment(JTextField.CENTER);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private santhosh.WideComboBox cmbboxName;
    private com.toedter.calendar.JDateChooser dateSelected;
    private javax.swing.JLabel labelFormListField_001_head;
    private javax.swing.JLabel labelFormListTitle_001_icon;
    private javax.swing.JLabel labelFormListTitle_001_name;
    private javax.swing.JSeparator panelFormListTitle_001_breakline;
    private javax.swing.JPanel panelFormListTitle_001_caption;
    private javax.swing.JPanel panelFormListTitle_001_hr;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelMainCenterForm;
    private javax.swing.JPanel panelMainCenterFormFields;
    private javax.swing.JPanel panelMainCenterView;
    private javax.swing.JPanel panelTitle;
    private javax.swing.JScrollPane scrollPane;
    public javax.swing.JTable table_view;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        
        ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_delete.png"));
        
        ClassTableButtonRenderer buttonTableRender = new ClassTableButtonRenderer(icon, Color.WHITE, Color.WHITE, Color.WHITE);
        ClassTableButtonEditor buttonTableEditor = new ClassTableButtonEditor(icon, Color.WHITE, Color.WHITE, Color.WHITE){
            
            // Override with custom table row delete.
            @Override
            protected void fireEditingStopped() {
                DefaultTableModel tm = (DefaultTableModel)table_view.getModel();
                tm.removeRow(table_view.convertRowIndexToModel(table_view.getSelectedRow()));

                table_view.setModel(tm);
                table_view.repaint();
            }
            
        };

        this.dtm = new DefaultTableModel(){
            @Override
            public Class getColumnClass(int column){
                Class returnValue;
                try {
                    if((column>=0) && (column<getColumnCount()) && (column!=2)) {
                        returnValue = getValueAt(0, column).getClass();
                    } else {
                        returnValue = Object.class;
                    }
                } catch (Exception ex) {
//                    System.out.println(ex.getMessage());
                    returnValue = Object.class;
                }
                return returnValue;
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                switch(column) {
                    case 3:
                        return true;
                    default:
                        return false;
                }
            }
        };
        
        ArrayList<Object> columnTitle = new ArrayList<>();
        
        columnTitle.add("");
        columnTitle.add("TRAINING NAME");
        columnTitle.add("DATE");
        columnTitle.add("");
        
        dtm.setDataVector(null, columnTitle.toArray());
        
        table_view.setModel(dtm);
        table_view.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        table_view.getColumnModel().getColumn(0).setMinWidth(0);
        table_view.getColumnModel().getColumn(0).setResizable(false);
        table_view.getColumnModel().getColumn(0).setPreferredWidth(0);
        table_view.getColumnModel().getColumn(1).setMinWidth(243);
        table_view.getColumnModel().getColumn(2).setResizable(false);
        table_view.getColumnModel().getColumn(2).setPreferredWidth(80);
        table_view.getColumnModel().getColumn(3).setResizable(false);
        table_view.getColumnModel().getColumn(3).setPreferredWidth(30);
        table_view.getColumnModel().getColumn(3).setCellEditor(buttonTableEditor);
        table_view.getColumnModel().getColumn(3).setCellRenderer(buttonTableRender);
        
        JTableHeader th = table_view.getTableHeader();
        th.setFont(new Font("Century Gothic", Font.BOLD, 13));
        
        DefaultTableCellRenderer renderHeaderCenter = (DefaultTableCellRenderer)table_view.getTableHeader().getDefaultRenderer();
        renderHeaderCenter.setHorizontalAlignment(JLabel.CENTER);
        table_view.getColumnModel().getColumn(1).setHeaderRenderer(renderHeaderCenter);
        
        DefaultTableCellRenderer renderCellLeft = new DefaultTableCellRenderer();
        renderCellLeft.setHorizontalAlignment(SwingConstants.LEFT);
        table_view.getColumnModel().getColumn(1).setCellRenderer(renderCellLeft);
        
        DefaultTableCellRenderer renderCellCenter = new DefaultTableCellRenderer();
        renderCellCenter.setHorizontalAlignment(SwingConstants.CENTER);
        table_view.getColumnModel().getColumn(2).setCellRenderer(renderCellCenter);
        
    }

    private void comboBoxLoad() {
        
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
        dcbm.addElement("");
        
        try {
            //Database connection
            ClassMyDBConnectionEmbeddedDerby.initDB();

            try (Connection c = ClassMyDBConnectionEmbeddedDerby.getMyConnection()) {
                PreparedStatement ps;
                ResultSet rs;
                int ct;
                
                ps = c.prepareStatement("SELECT id, name FROM " + constant.TABLE_LIST_TRAINING + " ORDER BY name ASC");
                rs = ps.executeQuery();
                ct = 0;
                
                while (rs.next()) {
                    if(!rs.getString(2).trim().isEmpty()) {
                        cmbboxId.add(ct, Integer.parseInt(rs.getString(1)));
                        dcbm.addElement(rs.getString(2).trim());
                        ct++;
                    }
                }
                
                cmbboxName.setModel(dcbm);
                ClassComplexCellrenderer renderer = new ClassComplexCellrenderer();
                renderer.title = "Select a Training";
                renderer.isForDialog = true;
                cmbboxName.setRenderer(renderer);
                
                // Close excess connection
                c.close();
                
            }
        } catch (SQLException ex) {
//            Logger.getLogger(FrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }


}
