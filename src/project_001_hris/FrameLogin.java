/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_001_hris;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Insets;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author egrubellano
 */
public final class FrameLogin extends javax.swing.JFrame {

    final static ClassSliderJPanel slider = new ClassSliderJPanel();
    final static ClassHideToSystemTray frameOptionHide = new ClassHideToSystemTray();
//    final static ClassIconCustomizer iconCustomizer = new ClassIconCustomizer();
    ArrayList<JTextField> textFieldList = new ArrayList<>();
    ArrayList<JLabel> labelList = new ArrayList<>();
    ArrayList<JLabel> labelHoverList = new ArrayList<>();
    JFrame frame = this;

    /**
     * Creates new form FrameLogin
     */
    public FrameLogin() {
        initComponents();
        initComponentsAdd();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        formOption = new javax.swing.JPanel();
        formOptionFields = new javax.swing.JPanel();
        formOptionFields01 = new javax.swing.JPanel();
        formOptionUser = new javax.swing.JPanel();
        formOptionButtonUserLabel = new javax.swing.JLabel();
        formOptionButtonUser = new javax.swing.JButton();
        formOptionGuest = new javax.swing.JPanel();
        formOptionButtonGuestLabel = new javax.swing.JLabel();
        formOptionButtonGuest = new javax.swing.JButton();
        formOptionButtons = new javax.swing.JPanel();
        formOptionLabel01 = new javax.swing.JLabel();
        formOptionLabel02 = new javax.swing.JLabel();
        formOptionButtonClose = new javax.swing.JButton();
        formUser = new javax.swing.JPanel();
        formUserFields = new javax.swing.JPanel();
        formUserFields01 = new javax.swing.JPanel();
        formUserUsername = new javax.swing.JPanel();
        formUserUsernamePanel = new javax.swing.JPanel();
        formUserUsernameFields = new javax.swing.JLayeredPane();
        formUserUsernameTextfield = new javax.swing.JTextField();
        formUserUsernameLabel = new javax.swing.JLabel();
        formUserUsernameClear = new javax.swing.JLabel();
        formUserPassword = new javax.swing.JPanel();
        formUserPasswordPanel = new javax.swing.JPanel();
        formUserPasswordFields = new javax.swing.JLayeredPane();
        formUserPasswordTextfield = new javax.swing.JPasswordField();
        formUserPasswordLabel = new javax.swing.JLabel();
        formUserPasswordClear = new javax.swing.JLabel();
        formUserLogIn = new javax.swing.JPanel();
        formUserLogInLabel = new javax.swing.JLabel();
        formUserLogInButton = new javax.swing.JButton();
        formUserFields02 = new javax.swing.JPanel();
        labelLoadingLogo = new javax.swing.JLabel();
        formUserButtons = new javax.swing.JPanel();
        formUserButtonBack = new javax.swing.JButton();
        formUserLabel01 = new javax.swing.JLabel();
        formUserButtonClose = new javax.swing.JButton();
        panelCenter = new javax.swing.JPanel();
        panelLogo = new javax.swing.JPanel();
        lblLogoIcon = new javax.swing.JLabel();
        panelForm = new javax.swing.JPanel();

        formOption.setPreferredSize(new java.awt.Dimension(20, 0));
        formOption.setLayout(new java.awt.BorderLayout());

        formOptionFields.setPreferredSize(new java.awt.Dimension(25, 0));
        formOptionFields.setLayout(new java.awt.CardLayout());

        formOptionFields01.setLayout(new java.awt.GridLayout(0, 1));

        formOptionUser.setPreferredSize(new java.awt.Dimension(25, 0));
        formOptionUser.setLayout(new java.awt.BorderLayout());

        formOptionButtonUserLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        formOptionButtonUserLabel.setForeground(new java.awt.Color(15, 15, 15));
        formOptionButtonUserLabel.setPreferredSize(new java.awt.Dimension(20, 2));
        formOptionUser.add(formOptionButtonUserLabel, java.awt.BorderLayout.PAGE_START);

        formOptionButtonUser.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        formOptionButtonUser.setForeground(new java.awt.Color(25, 25, 25));
        formOptionButtonUser.setText("Log-in as User");
        formOptionButtonUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formOptionButtonUserActionPerformed(evt);
            }
        });
        formOptionUser.add(formOptionButtonUser, java.awt.BorderLayout.CENTER);

        formOptionFields01.add(formOptionUser);

        formOptionGuest.setPreferredSize(new java.awt.Dimension(25, 0));
        formOptionGuest.setLayout(new java.awt.BorderLayout());

        formOptionButtonGuestLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        formOptionButtonGuestLabel.setForeground(new java.awt.Color(15, 15, 15));
        formOptionButtonGuestLabel.setPreferredSize(new java.awt.Dimension(20, 2));
        formOptionGuest.add(formOptionButtonGuestLabel, java.awt.BorderLayout.PAGE_START);

        formOptionButtonGuest.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        formOptionButtonGuest.setForeground(new java.awt.Color(25, 25, 25));
        formOptionButtonGuest.setText("Log-in as Guest");
        formOptionButtonGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formOptionButtonGuestActionPerformed(evt);
            }
        });
        formOptionGuest.add(formOptionButtonGuest, java.awt.BorderLayout.CENTER);

        formOptionFields01.add(formOptionGuest);

        formOptionFields.add(formOptionFields01, "card2");

        formOption.add(formOptionFields, java.awt.BorderLayout.CENTER);

        formOptionButtons.setPreferredSize(new java.awt.Dimension(235, 40));
        formOptionButtons.setLayout(new java.awt.GridLayout(1, 0));
        formOptionButtons.add(formOptionLabel01);
        formOptionButtons.add(formOptionLabel02);

        formOptionButtonClose.setFont(new java.awt.Font("Arial", 3, 11)); // NOI18N
        formOptionButtonClose.setForeground(new java.awt.Color(26, 26, 26));
        formOptionButtonClose.setText("Close");
        formOptionButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formOptionButtonCloseActionPerformed(evt);
            }
        });
        formOptionButtons.add(formOptionButtonClose);

        formOption.add(formOptionButtons, java.awt.BorderLayout.PAGE_END);

        formUser.setPreferredSize(new java.awt.Dimension(20, 0));
        formUser.setLayout(new java.awt.BorderLayout());

        formUserFields.setPreferredSize(new java.awt.Dimension(25, 0));
        formUserFields.setLayout(new java.awt.CardLayout());

        formUserFields01.setLayout(new java.awt.GridLayout(0, 1));

        formUserUsername.setLayout(new java.awt.BorderLayout());

        formUserUsernamePanel.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout formUserUsernamePanelLayout = new javax.swing.GroupLayout(formUserUsernamePanel);
        formUserUsernamePanel.setLayout(formUserUsernamePanelLayout);
        formUserUsernamePanelLayout.setHorizontalGroup(
            formUserUsernamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        formUserUsernamePanelLayout.setVerticalGroup(
            formUserUsernamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        formUserUsername.add(formUserUsernamePanel, java.awt.BorderLayout.PAGE_START);

        formUserUsernameFields.setVerifyInputWhenFocusTarget(false);
        formUserUsernameFields.setLayout(new java.awt.GridBagLayout());

        formUserUsernameTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ((AbstractDocument) formUserUsernameTextfield.getDocument()).setDocumentFilter(new myDocumentFilterIsLetterOrDigit());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        formUserUsernameFields.add(formUserUsernameTextfield, gridBagConstraints);
        textFieldList.add(0, formUserUsernameTextfield);
        labelList.add(0, formUserUsernameLabel);

        formUserUsernameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_user_silhouette.png"))); // NOI18N
        formUserUsernameLabel.setLabelFor(formUserUsernameTextfield);
        formUserUsernameLabel.setToolTipText("Input username here.");
        formUserUsernameLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        formUserUsernameLabel.setEnabled(false);
        formUserUsernameLabel.setPreferredSize(new java.awt.Dimension(300, 205));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        formUserUsernameFields.add(formUserUsernameLabel, gridBagConstraints);
        formUserUsernameFields.setLayer(formUserUsernameLabel, javax.swing.JLayeredPane.PALETTE_LAYER);

        formUserUsernameClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_bullet_arrow_left.png"))); // NOI18N
        formUserUsernameClear.setLabelFor(formUserUsernameTextfield);
        formUserUsernameClear.setToolTipText("Clear username field.");
        formUserUsernameClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        formUserUsernameClear.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        formUserUsernameFields.add(formUserUsernameClear, gridBagConstraints);
        formUserUsernameFields.setLayer(formUserUsernameClear, javax.swing.JLayeredPane.PALETTE_LAYER);
        labelHoverList.add(0, formUserUsernameClear);

        formUserUsername.add(formUserUsernameFields, java.awt.BorderLayout.CENTER);

        formUserFields01.add(formUserUsername);

        formUserPassword.setLayout(new java.awt.BorderLayout());

        formUserPasswordPanel.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout formUserPasswordPanelLayout = new javax.swing.GroupLayout(formUserPasswordPanel);
        formUserPasswordPanel.setLayout(formUserPasswordPanelLayout);
        formUserPasswordPanelLayout.setHorizontalGroup(
            formUserPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        formUserPasswordPanelLayout.setVerticalGroup(
            formUserPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        formUserPassword.add(formUserPasswordPanel, java.awt.BorderLayout.PAGE_START);

        formUserPasswordFields.setVerifyInputWhenFocusTarget(false);
        formUserPasswordFields.setLayout(new java.awt.GridBagLayout());

        formUserPasswordTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        formUserPasswordTextfield.setEchoChar('X');
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        formUserPasswordFields.add(formUserPasswordTextfield, gridBagConstraints);
        textFieldList.add(1, formUserPasswordTextfield);
        labelList.add(1, formUserPasswordLabel);

        formUserPasswordLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_lock.png"))); // NOI18N
        formUserPasswordLabel.setLabelFor(formUserUsernameTextfield);
        formUserPasswordLabel.setToolTipText("Input password here");
        formUserPasswordLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        formUserPasswordLabel.setEnabled(false);
        formUserPasswordLabel.setPreferredSize(new java.awt.Dimension(300, 205));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        formUserPasswordFields.add(formUserPasswordLabel, gridBagConstraints);
        formUserPasswordFields.setLayer(formUserPasswordLabel, javax.swing.JLayeredPane.PALETTE_LAYER);

        formUserPasswordClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/icon_16_bullet_arrow_left.png"))); // NOI18N
        formUserPasswordClear.setLabelFor(formUserUsernameTextfield);
        formUserPasswordClear.setToolTipText("Clear password field.");
        formUserPasswordClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        formUserPasswordClear.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        formUserPasswordFields.add(formUserPasswordClear, gridBagConstraints);
        formUserPasswordFields.setLayer(formUserPasswordClear, javax.swing.JLayeredPane.PALETTE_LAYER);
        labelHoverList.add(1, formUserPasswordClear);

        formUserPassword.add(formUserPasswordFields, java.awt.BorderLayout.CENTER);

        formUserFields01.add(formUserPassword);

        formUserLogIn.setPreferredSize(new java.awt.Dimension(25, 0));
        formUserLogIn.setLayout(new java.awt.BorderLayout());

        formUserLogInLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        formUserLogInLabel.setForeground(new java.awt.Color(15, 15, 15));
        formUserLogInLabel.setPreferredSize(new java.awt.Dimension(20, 2));
        formUserLogIn.add(formUserLogInLabel, java.awt.BorderLayout.PAGE_START);

        formUserLogInButton.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        formUserLogInButton.setForeground(new java.awt.Color(25, 25, 25));
        formUserLogInButton.setText("LOG-IN");
        formUserLogInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formUserLogInButtonActionPerformed(evt);
            }
        });
        formUserLogIn.add(formUserLogInButton, java.awt.BorderLayout.CENTER);

        formUserFields01.add(formUserLogIn);

        formUserFields.add(formUserFields01, "Card Form");

        formUserFields02.setLayout(new java.awt.GridBagLayout());

        labelLoadingLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLoadingLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/loading.gif"))); // NOI18N
        labelLoadingLogo.setToolTipText("");
        formUserFields02.add(labelLoadingLogo, new java.awt.GridBagConstraints());

        formUserFields.add(formUserFields02, "Card Load");

        formUser.add(formUserFields, java.awt.BorderLayout.CENTER);

        formUserButtons.setPreferredSize(new java.awt.Dimension(235, 40));
        formUserButtons.setLayout(new java.awt.GridLayout(1, 0));

        formUserButtonBack.setFont(new java.awt.Font("Arial", 3, 11)); // NOI18N
        formUserButtonBack.setForeground(new java.awt.Color(26, 26, 26));
        formUserButtonBack.setText("Back");
        formUserButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formUserButtonBackActionPerformed(evt);
            }
        });
        formUserButtons.add(formUserButtonBack);
        formUserButtons.add(formUserLabel01);

        formUserButtonClose.setFont(new java.awt.Font("Arial", 3, 11)); // NOI18N
        formUserButtonClose.setForeground(new java.awt.Color(26, 26, 26));
        formUserButtonClose.setText("Close");
        formUserButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formUserButtonCloseActionPerformed(evt);
            }
        });
        formUserButtons.add(formUserButtonClose);

        formUser.add(formUserButtons, java.awt.BorderLayout.PAGE_END);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HRIS Log-in");
        setResizable(false);

        panelCenter.setLayout(new java.awt.BorderLayout());

        panelLogo.setPreferredSize(new java.awt.Dimension(330, 143));
        panelLogo.setLayout(new java.awt.GridBagLayout());

        lblLogoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_src/logo_hris.png"))); // NOI18N
        panelLogo.add(lblLogoIcon, new java.awt.GridBagConstraints());

        panelCenter.add(panelLogo, java.awt.BorderLayout.CENTER);

        panelForm.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelForm.setPreferredSize(new java.awt.Dimension(330, 185));
        panelForm.setLayout(new java.awt.CardLayout(5, 5));
        panelCenter.add(panelForm, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(341, 431));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsAdd() {

        // Textfield on focus icons behaviour.
        focusComponentIcons(textFieldList);

        // Textfield on hover icons behaviour.
        hoverComponentIcons(labelHoverList);

        // Initialize JPanel Slider.
        panelForm.add(initSlider());

        // Change JLabels icon color.
//        iconCustomizer.changeAlpha(labelHoverList, 50);

        // Hide to tray option.
        frameOptionHide.frameSystemTrayOption(frame, formUserUsernameTextfield);

        // Overide system WindowClosing function.
        closeProgram();

    }
    
    private void formUserLogInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formUserLogInButtonActionPerformed

        final CardLayout mainLayout = (CardLayout) formUserFields.getLayout();        

        mainLayout.show(formUserFields, "Card Load");
        formUserButtonBack.setEnabled(false);
        formUserButtonClose.setEnabled(false);

        new java.util.Timer().schedule(
            new java.util.TimerTask() {
                @Override
                public void run() {
                    if (formUserUsernameTextfield.getText().trim().isEmpty()) {
                        formUserUsernameTextfield.setBackground(new Color(255, 100, 100));
                        formUserUsernameLabel.setEnabled(true);
                    }

                    if (formUserPasswordTextfield.getText().trim().isEmpty()) {
                        formUserPasswordTextfield.setBackground(new Color(255, 100, 100));
                        formUserPasswordLabel.setEnabled(true);
                    }

                    if (!formUserUsernameTextfield.getText().trim().isEmpty() && !formUserPasswordTextfield.getText().trim().isEmpty()) {
                        loadMainFrame();
                    }

                    mainLayout.show(formUserFields, "Card Form");
                    formUserButtonBack.setEnabled(true);
                    formUserButtonClose.setEnabled(true);
                }
            },
            1000
        );

    }//GEN-LAST:event_formUserLogInButtonActionPerformed

    private void formUserButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formUserButtonCloseActionPerformed

        int exitOption = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit the program?", "", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        switch (exitOption) {
            case JOptionPane.YES_OPTION:
                System.exit(0);
                break;

            case JOptionPane.NO_OPTION:
                break;
        }

    }//GEN-LAST:event_formUserButtonCloseActionPerformed

    private void formUserButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formUserButtonBackActionPerformed

        slider.prev();
        slider.refresh();

    }//GEN-LAST:event_formUserButtonBackActionPerformed

    private void formOptionButtonUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formOptionButtonUserActionPerformed

        slider.next();
        slider.refresh();

        clearForms(false);

        formUserUsernameTextfield.requestFocus();

    }//GEN-LAST:event_formOptionButtonUserActionPerformed

    private void formOptionButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formOptionButtonCloseActionPerformed

        int exitOption = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit the program?", "", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        switch (exitOption) {
            case JOptionPane.YES_OPTION:
                System.exit(0);
                break;

            case JOptionPane.NO_OPTION:
                break;
        }

    }//GEN-LAST:event_formOptionButtonCloseActionPerformed

    private void formOptionButtonGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formOptionButtonGuestActionPerformed

        int guestOption = JOptionPane.showConfirmDialog(this, "\n\"GUEST\" users can only perform limited tasks.\n\nWould you like to proceed?\n\n", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        switch (guestOption) {
            case JOptionPane.YES_OPTION:
                loadMainFrame();
                break;

            case JOptionPane.NO_OPTION:
                break;
        }

    }//GEN-LAST:event_formOptionButtonGuestActionPerformed

    /**
     * Clear Login form
     * 
     * @param jLabelBool 
     */
    private void clearForms(Boolean jLabelBool) {

        formUserUsernameLabel.setEnabled(jLabelBool);
        formUserPasswordLabel.setEnabled(jLabelBool);

        formUserUsernameTextfield.setText(" ");
        formUserUsernameTextfield.replaceSelection(" ");
        formUserPasswordTextfield.setText("");

        formUserUsernameTextfield.setBackground(Color.WHITE);
        formUserPasswordTextfield.setBackground(Color.WHITE);

    }

    /**
     * Initialize JPanel slider
     * 
     * @return ClassSliderJPanel
     */
    private static JComponent initSlider() {

        slider.addSliderComponent(formOption);
        slider.addSliderComponent(formUser);
        slider.refresh();

        return slider;

    }

    private void loadMainFrame() {

        FrameMain frm = new FrameMain();

        try {  // Open program if successful.

            int max = 0;
            if (max == 0) {
                frm.setSize(frm.getMinimumSize());
                frm.setLocationRelativeTo(null);
            } else {
                frm.setExtendedState(FrameMain.MAXIMIZED_BOTH);
            }
            frm.setVisible(true);
            this.dispose();

        } catch (Exception e) {  // Close program if error.

            frm.dispose();
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);

        }

    }

    private void closeProgram() {

        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                int exitOption = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit the program?", "", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

                if (exitOption == JOptionPane.YES_OPTION) {
                    System.exit(0);
                } else {
                    setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                }
            }

        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrameLogin().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel formOption;
    private javax.swing.JButton formOptionButtonClose;
    private javax.swing.JButton formOptionButtonGuest;
    private javax.swing.JLabel formOptionButtonGuestLabel;
    private javax.swing.JButton formOptionButtonUser;
    private javax.swing.JLabel formOptionButtonUserLabel;
    private javax.swing.JPanel formOptionButtons;
    private javax.swing.JPanel formOptionFields;
    private javax.swing.JPanel formOptionFields01;
    private javax.swing.JPanel formOptionGuest;
    private javax.swing.JLabel formOptionLabel01;
    private javax.swing.JLabel formOptionLabel02;
    private javax.swing.JPanel formOptionUser;
    private static javax.swing.JPanel formUser;
    private javax.swing.JButton formUserButtonBack;
    private javax.swing.JButton formUserButtonClose;
    private javax.swing.JPanel formUserButtons;
    private javax.swing.JPanel formUserFields;
    private javax.swing.JPanel formUserFields01;
    private javax.swing.JPanel formUserFields02;
    private javax.swing.JLabel formUserLabel01;
    private javax.swing.JPanel formUserLogIn;
    private javax.swing.JButton formUserLogInButton;
    private javax.swing.JLabel formUserLogInLabel;
    private javax.swing.JPanel formUserPassword;
    private javax.swing.JLabel formUserPasswordClear;
    private javax.swing.JLayeredPane formUserPasswordFields;
    private javax.swing.JLabel formUserPasswordLabel;
    private javax.swing.JPanel formUserPasswordPanel;
    private javax.swing.JPasswordField formUserPasswordTextfield;
    private javax.swing.JPanel formUserUsername;
    private javax.swing.JLabel formUserUsernameClear;
    private javax.swing.JLayeredPane formUserUsernameFields;
    private javax.swing.JLabel formUserUsernameLabel;
    private javax.swing.JPanel formUserUsernamePanel;
    private javax.swing.JTextField formUserUsernameTextfield;
    private javax.swing.JLabel labelLoadingLogo;
    private javax.swing.JLabel lblLogoIcon;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelForm;
    private javax.swing.JPanel panelLogo;
    // End of variables declaration//GEN-END:variables

    class myDocumentFilterIsLetterOrDigit extends DocumentFilter {

        @Override
        public void replace(DocumentFilter.FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
            for (int n = string.length(); n > 0; n--) {
                char c = string.charAt(n - 1);
                if (Character.isLetterOrDigit(c)) {
                    super.replace(fb, i, i1, String.valueOf(c).toUpperCase(), as);
                } else if (Character.isLetterOrDigit(c) || c != '`') {
                    super.replace(fb, i, i1, String.valueOf("").toUpperCase(), as);
                }
            }
        }

        @Override
        public void remove(DocumentFilter.FilterBypass fb, int i, int i1) throws BadLocationException {
            super.remove(fb, i, i1);
        }

        @Override
        public void insertString(DocumentFilter.FilterBypass fb, int i, String string, AttributeSet as) throws BadLocationException {
            super.insertString(fb, i, string, as);
        }

    }

    public void focusComponentIcons(final ArrayList<JTextField> arrayList) {

        for (int i = 0; i < arrayList.size(); i++) {

            arrayList.get(i).setMargin(new Insets(0, 25, 0, 12));

            final int count = i;

            arrayList.get(i).addFocusListener(new java.awt.event.FocusAdapter() {

                @Override
                public void focusGained(java.awt.event.FocusEvent evt) {
                    arrayList.get(count).setBackground(Color.WHITE);
                    labelList.get(count).setEnabled(true);
                }

                @Override
                public void focusLost(java.awt.event.FocusEvent evt) {
                    labelList.get(count).setEnabled(false);
                }

            });

        }

    }

    public void hoverComponentIcons(ArrayList<JLabel> arrayList) {

        for (int i = 0; i < arrayList.size(); i++) {

            final int count = i;
            arrayList.get(i).addMouseListener(new MouseListener() {

                @Override
                public void mouseEntered(MouseEvent e) {
                    if (!textFieldList.get(count).getText().trim().isEmpty()) {
                        labelHoverList.get(count).setEnabled(true);
                    }
//                    iconCustomizer.changeAlphaFull(labelHoverList.get(count));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    labelHoverList.get(count).setEnabled(false);
//                    iconCustomizer.changeAlphaHalf(labelHoverList.get(count));
                }

                @Override
                public void mouseClicked(MouseEvent e) { }

                @Override
                public void mousePressed(MouseEvent e) { }

                @Override
                public void mouseReleased(MouseEvent e) {
                    if (!textFieldList.get(count).getText().trim().isEmpty()) {
                        textFieldList.get(count).setText(" ");
                        textFieldList.get(count).replaceSelection(" ");
                        textFieldList.get(count).setText("");
                        textFieldList.get(count).requestFocus();
                    }
                }

            });

        }

    }

}
